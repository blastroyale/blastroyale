parameters:
  - name: dependsOn
    type: string
    default: ''
  - name: serviceConnection
    type: string
    default: ''
  - name: serviceName
    type: string
    default: ''
  - name: environment
    type: string
    default: ''
  - name: system
    type: string
    default: ''
  - name: minReplicas
    type: string
    default: 1
  - name: maxReplicas
    type: string
    default: 2
  - name: cpu
    type: string
    default: 1
  - name: memory
    type: string
    default: '2Gi'
  - name: ipwhitelist
    type: string
    default: '0.0.0.0/0'
  - name: helmRepoPassword
    type: string
    default: ''
  - name: dockerImage
    type: string
    default: ''
  - name: envVars
    type: string
    default: ''
  - name: autoDeployIfServer
    type: string
    default: ''

stages:
  - template: pipelines/release-helm-chart.yml@templates
    parameters:
      dependsOn: []
      preRunDeciderStep:
        # Only download parameters if is auto deploy
        - ${{ if ne(parameters.autoDeployIfServer, '')}}:
          - download: build
            artifact: parameters
        - script: |
            json=$(cat "$(Pipeline.Workspace)/build/parameters/parameters.json" | jq -c '.')
            deploy_game_logic=$(echo "$json" | jq -r '.deploy_game_logic')
            server_environment=$(echo "$json" | jq -r '.environment')
            echo "Server environment of the build is: $server_environment"
            echo "Deploy Game Logic: $deploy_game_logic"
            echo "Json Value: $json"
            if [ "${{ parameters.autoDeployIfServer }}" == "" ]; then
              echo "Deploy because autoDeployIfServer is empty"
              exit
            fi
            
            if [ "$deploy_game_logic" != "true" ]; then
              echo "Skip deploy because deploy_game_logic != true"
              echo "##vso[build.updatebuildnumber]SKIPPED-$(Build.BuildId)"
              echo "##vso[task.setvariable variable=skipDeploy]true"
              exit
            fi
            
            if [ "${{ parameters.autoDeployIfServer }}" != "$server_environment" ]; then
              echo "Skip deploy because ${{ parameters.autoDeployIfServer }} != $server_environment"
              echo "##vso[task.setvariable variable=skipDeploy]true"
            fi
          name: CheckIfSkip

          # If auto deploy
        - ${{ if ne(parameters.autoDeployIfServer, '')}}:   
          - script: |
              if [ "$(skipDeploy)" != "true" ]; then
                echo "##vso[build.updatebuildnumber]$(Build.BuildId)-${{parameters.system}}-GameBuild_$(resources.pipeline.build.runName)"
              fi
            name: RenameBuild
        # If Manual deploy
        - ${{ else }}:
          - script: |
              echo "##vso[build.updatebuildnumber]$(Build.BuildId)-${{parameters.system}}-${{parameters.dockerImage}}"
            name: RenameBuild

      image: ${{ parameters.dockerImage }}
      serviceConnection: AzureRM
      serviceName: game-logic-service2
      repoName: game-logic-service
      environment: ${{ parameters.environment }}
      system: ${{ parameters.system }}
      minReplicas: ${{ parameters.minReplicas }}
      maxReplicas: ${{ parameters.maxReplicas }}
      cpu: ${{ parameters.cpu }}
      memory: ${{ parameters.memory }}
      ipwhitelist: ${{ parameters.ipwhitelist }}
      helmRepoPassword: ${{ parameters.helmRepoPassword }}
      envVars: ${{ parameters.envVars }}
      customFQDN: ${{ parameters.environment }}-game-logic-service.blastroyale.com
