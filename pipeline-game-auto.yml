# Android build and release pipeline
# This pipeline is respsonsible for building the Android APK, and uploading to Azure Storage.

name: $(Rev:r)

trigger:
  batch: true
  branches:
    include:
    - 'develop'
    - 'release/*'
    - 'master'
pr: none

resources:
  repositories:
  - repository: self
  - repository: templates
    type: git
    ref: main
    name: Infrastructure/core-templates

parameters:
  - name: param_build_type
    displayName: Select Build Type
    type: string
    default: DEVELOPMENT_BUILD
    values:
      - DEVELOPMENT_BUILD
      - RELEASE_BUILD
      - STORE_BUILD
  - name: param_server_environment
    displayName: Select Target Server Environment
    type: string
    default: DEVELOPMENT_SERVER
    values:
      - DEVELOPMENT_SERVER
      - STAGE_SERVER
      - LIVE_SERVER
  - name: param_run_unity_tests
    displayName: Run Unit Tests
    type: boolean
    default: false
  - name: param_use_accelerator
    displayName: Use Accelerator
    type: boolean
    default: true
    

variables:
- group: Secrets
- group: Non-secrets
- name: unity_password
  value: $(UNITY-PASSWORD)
- name: unity_serial
  value: $(UNITY-SERIAL)
- name: unity_email
  value: $(UNITY-EMAIL)
- name: branchName
  value: $[replace(variables['Build.SourceBranch'], 'refs/heads/', '')]
- name: webhookUrl
  value: $(SLACK-WEBHOOK-URL)
- name: cuttlyApiKey
  value: $(PROD-COMMON-CUTTLY-KEY)
# Auto setup
- ${{ if ne(variables['Build.Reason'], 'Manual') }}:
  - name: configuration
    ${{  if eq(variables['Build.SourceBranch'], 'refs/heads/develop')  }}:
      value: "Debug"
    ${{  if or(startsWith(variables['Build.SourceBranch'], 'refs/heads/release'), startsWith(variables['Build.SourceBranch'], 'refs/heads/master'))  }}:
      value: "Release"
  - name: build_type
    ${{  if eq(variables['Build.SourceBranch'], 'refs/heads/develop')  }}:
      value: "DEVELOPMENT_BUILD"
    ${{  if startsWith(variables['Build.SourceBranch'], 'refs/heads/release')  }}:
      value: "RELEASE_BUILD"
    ${{  if eq(variables['Build.SourceBranch'], 'refs/heads/master')  }}:
      value: "STORE_BUILD"
  - name: server_environment
    ${{  if eq(variables['Build.SourceBranch'], 'refs/heads/develop')  }}:
      value: "DEVELOPMENT_SERVER"
    ${{  if startsWith(variables['Build.SourceBranch'], 'refs/heads/release')  }}:
      value: "STAGE_SERVER"
    ${{  if eq(variables['Build.SourceBranch'], 'refs/heads/master')  }}:
      value: "LIVE_SERVER"
  - name: androidFileType
    ${{  if or(startsWith(variables['Build.SourceBranch'], 'refs/heads/develop'), startsWith(variables['Build.SourceBranch'], 'refs/heads/release'))  }}:
      value: "apk"
    ${{  if eq(variables['Build.SourceBranch'], 'refs/heads/master')  }}:
      value: "aab"
  - name: useAccelerator
    value: true
# Manual setup
- ${{ if eq(variables['Build.Reason'], 'Manual') }}:
  - ${{  if eq(parameters['param_build_type'], 'DEVELOPMENT_BUILD') }}:
      - name: configuration
        value: "Debug"
      - name: androidFileType
        value: "apk"
  - ${{  if eq(parameters['param_build_type'], 'RELEASE_BUILD') }}:
      - name: configuration
        value: "Release"
      - name: androidFileType
        value: "apk"
  - ${{  if eq(parameters['param_build_type'], 'STORE_BUILD') }}:
      - name: configuration
        value: "Release"
      - name: androidFileType
        value: "aab"
  - name: build_type
    value: ${{ parameters.param_build_type }}
  - name: server_environment
    value: ${{ parameters.param_server_environment }}
  - name: runUnitTests
    value: ${{ parameters.param_run_unity_tests }}           
  - name: useAccelerator
    value: ${{ parameters.param_use_accelerator }}


pool: macos


stages:
  - stage: Builds
    jobs:
      - job: PrintBuildSetup
        displayName: Print Build Setup
        steps:
          - checkout: none
          - bash: |
              echo "Build Reason: $(Build.Reason)"
              echo "Server Environment: $(server_environment)"
              echo "Build Type: $(build_type)"
              echo "Configuration: $(configuration)"
              echo "Android File Type: $(androidFileType)"
              echo "Use Accelerator: $(useAccelerator)"
              echo "Run Tests: $(runUnitTests)"
            displayName: Print Build Setup
            
      - job: EditorTests
        displayName: Run Editor Test Suite
        condition: eq('${{ lower(variables.runUnitTests) }}', 'true')
        steps:
        - checkout: self
          lfs: true
          submodules: true
        - template: pipelines/unity-tests.yml@templates
          parameters:
            testPlatform: EditMode
            
      - job: AndroidBuild
        timeoutInMinutes: 90
        dependsOn: EditorTests
        displayName: Android Build
        workspace:
          clean: all
        condition: and(in(dependencies.EditorTests.result, 'Succeeded', 'Skipped'), ne(variables['SkipBuilds'], 'true'))
        steps:
        - checkout: self
          lfs: true
          submodules: true
        - template: pipelines/unity-build.yml@templates
          parameters:
            configuration: $(configuration)
            platform: Android
            unity_username: $(unity_email)
            unity_password: $(unity_password)
            unity_serial: $(unity_serial)
            workingDirectory: .
            branchName: $(branchName)
            build_type: ${{ variables.build_type }}
            server_environment: ${{ variables.server_environment }}
            webhookUrl: $(webhookUrl)
            cuttlyApiKey: $(cuttlyApiKey)
            androidFileType: $(androidFileType)
            useUnityAccelerator: ${{ variables.useAccelerator }}
            publishDlls: true
            
      - job: iOSBuild
        timeoutInMinutes: 90
        dependsOn: EditorTests
        displayName: iOS Build
        workspace:
          clean: all
        condition: and(in(dependencies.EditorTests.result, 'Succeeded', 'Skipped'), ne(variables['SkipBuilds'], 'true'))
        steps:
        - checkout: self
          lfs: true
          submodules: true
        - template: pipelines/unity-build.yml@templates
          parameters:
            configuration: $(configuration)
            platform: iOS
            unity_username: $(unity_email)
            unity_password: $(unity_password)
            unity_serial: $(unity_serial)
            workingDirectory: .
            branchName: $(branchName)
            build_type: ${{ variables.build_type }}
            server_environment: ${{ variables.server_environment }}
            webhookUrl: $(webhookUrl)
            cuttlyApiKey: $(cuttlyApiKey)
            developmentiOSCertPwd: $(developmentiOSCertPwd)
            distributioniOSCertPwd: $(distributioniOSCertPwd)
            useUnityAccelerator: ${{ variables.useAccelerator }}
