# Pipeline to release new containers on container apps

trigger: none
pr: none
resources:
  pipelines:
  - pipeline: build
    source: 'Game Logic Service CI'
    trigger:
      branches:
        include:
        - 'develop'
        - 'release/*'
        - 'master'
  repositories:
  - repository: templates
    type: git
    ref: main
    name: Infrastructure/core-templates

variables:
# Variable called 'image_manual_override' is defined for optional per-run manual override.
- group: Secrets
- group: Non-secrets
- name: serviceConnection
  value: AzureRM
- name: serviceName
  value: game-logic-service
- name: registry
  value: $(REGISTRY_NAME).azurecr.io

pool: linux-k8s

stages:
- ${{  if eq(variables['Build.SourceBranch'], 'refs/heads/develop')  }}:
  - template: pipelines/release-helm-chart.yml@templates
    parameters:
      serviceConnection: $(serviceConnection)
      serviceName: $(serviceName)
      image: $(image_manual_override)
      environment: dev
      system: dev
      minReplicas: 1
      maxReplicas: 2
      cpu: 1
      memory: 2Gi
      ipwhitelist: 0.0.0.0/0
      helmRepoPassword: $(HELM-REPO-PASSWORD)
      envVars: |
        --set env.API_KEY=$(DEV-COMMON-API-KEY) \
        --set env.API_URL="***REMOVED***" \
        --set env.APPLICATIONINSIGHTS_CONNECTION_STRING="$(DEV-COMMON-APP-INSIGHTS-CONNECTION-STRING)" \
        --set env.APPLICATION_ENVIRONMENT=dev \
        --set env.CONNECTION_STRING="$(DEV-BLOCKCHAIN-DB-CONNECTION-STRING-K8S)" \
        --set env.DEV_MODE=TRUE \
        --set env.NFT_SYNC=true \
        --set env.PLAYFAB_DEV_SECRET_KEY=$(DEV-COMMON-PLAYFAB-SECRET-KEY) \
        --set env.PLAYFAB_SECRET_KEY=$(DEV-COMMON-PLAYFAB-SECRET-KEY) \
        --set env.PLAYFAB_TITLE=***REMOVED*** \
        --set env.SqlConnectionString="$(DEV-BLOCKCHAIN-DB-CONNECTION-STRING-K8S)"

- ${{  if startsWith(variables['Build.SourceBranch'], 'refs/heads/release')  }}:
  - template: pipelines/release-helm-chart.yml@templates
    parameters:
      serviceConnection: $(serviceConnection)
      serviceName: $(serviceName)
      image: $(image_manual_override)
      environment: staging
      system: staging
      minReplicas: 1
      maxReplicas: 2
      cpu: 1
      memory: 2Gi
      ipwhitelist: 0.0.0.0/0
      helmRepoPassword: $(HELM-REPO-PASSWORD)
      envVars: |
        --set env.API_KEY=$(STAGING-COMMON-API-KEY) \
        --set env.API_URL="https://staging-hub-blockchain-service.blastroyale.com" \
        --set env.APPLICATIONINSIGHTS_CONNECTION_STRING="$(STAGING-COMMON-APP-INSIGHTS-CONNECTION-STRING)" \
        --set env.APPLICATION_ENVIRONMENT=staging \
        --set env.REMOTE_CONFIGURATION=true \
        --set env.CONNECTION_STRING="$(STAGING-BLOCKCHAIN-DB-CONNECTION-STRING-K8S)" \
        --set env.DEV_MODE=false \
        --set env.NFT_SYNC=true \
        --set env.PLAYFAB_DEV_SECRET_KEY=$(STAGING-COMMON-PLAYFAB-SECRET-KEY) \
        --set env.PLAYFAB_SECRET_KEY=$(STAGING-COMMON-PLAYFAB-SECRET-KEY) \
        --set env.PLAYFAB_TITLE=***REMOVED*** \
        --set env.SqlConnectionString="$(STAGING-BLOCKCHAIN-DB-CONNECTION-STRING-K8S)"

- ${{  if eq(variables['Build.SourceBranch'], 'refs/heads/master')  }}:
  - template: pipelines/release-helm-chart.yml@templates
    parameters:
      serviceConnection: $(serviceConnection)
      serviceName: $(serviceName)
      image: $(image_manual_override)
      environment: testnet-prod
      system: testnetprod
      minReplicas: 1
      maxReplicas: 2
      cpu: 1
      memory: 2Gi
      ipwhitelist: 0.0.0.0/0
      helmRepoPassword: $(HELM-REPO-PASSWORD)
      envVars: |
        --set env.API_KEY=$(TESTNET-PROD-COMMON-API-KEY) \
        --set env.API_URL="https://testnet-prod-blockchain-service.blastroyale.com" \
        --set env.APPLICATIONINSIGHTS_CONNECTION_STRING="$(TESTNET-PROD-COMMON-APP-INSIGHTS-CONNECTION-STRING)" \
        --set env.APPLICATION_ENVIRONMENT=testnet-prod \
        --set env.CONNECTION_STRING="$(TESTNET-PROD-BLOCKCHAIN-DB-CONNECTION-STRING-K8S)" \
        --set env.DEV_MODE=false \
        --set env.NFT_SYNC=true \
        --set env.PLAYFAB_DEV_SECRET_KEY=$(TESTNET-PROD-COMMON-PLAYFAB-SECRET-KEY) \
        --set env.PLAYFAB_SECRET_KEY=$(TESTNET-PROD-COMMON-PLAYFAB-SECRET-KEY) \
        --set env.PLAYFAB_TITLE=***REMOVED*** \
        --set env.SqlConnectionString="$(TESTNET-PROD-BLOCKCHAIN-DB-CONNECTION-STRING-K8S)"

- ${{  if eq(variables['Build.SourceBranch'], 'refs/heads/master')  }}:
  - template: pipelines/release-helm-chart.yml@templates
    parameters:
      serviceConnection: $(serviceConnection)
      serviceName: $(serviceName)
      image: $(image_manual_override)
      environment: mainnet-prod
      system: mainnetprod
      minReplicas: 1
      maxReplicas: 2
      cpu: 1
      memory: 2Gi
      ipwhitelist: 0.0.0.0/0
      helmRepoPassword: $(HELM-REPO-PASSWORD)
      envVars: |
        --set autoscaling.enabled=true \
        --set autoscaling.minReplicas=1 \
        --set autoscaling.targetCPUUtilizationPercentage=190 \
        --set autoscaling.targetMemoryUtilizationPercentage=230 \
        --set env.API_KEY=$(MAINNET-PROD-COMMON-API-KEY) \
        --set env.API_URL=https://mainnet-prod-hub-blockchain-service.blastroyale.com \
        --set env.APPLICATIONINSIGHTS_CONNECTION_STRING="$(MAINNET-PROD-COMMON-APP-INSIGHTS-CONNECTION-STRING)" \
        --set env.APPLICATION_ENVIRONMENT=mainnet-prod \
        --set env.REMOTE_CONFIGURATION=true \
        --set env.CONNECTION_STRING="$(MAINNET-PROD-BLOCKCHAIN-DB-CONNECTION-STRING-K8S)" \
        --set env.DEV_MODE=false \
        --set env.NFT_SYNC=true \
        --set env.PLAYFAB_DEV_SECRET_KEY=$(MAINNET-PROD-COMMON-PLAYFAB-SECRET-KEY) \
        --set env.PLAYFAB_SECRET_KEY=$(MAINNET-PROD-COMMON-PLAYFAB-SECRET-KEY) \
        --set env.PLAYFAB_TITLE=***REMOVED*** \
        --set env.SqlConnectionString="$(MAINNET-PROD-BLOCKCHAIN-DB-CONNECTION-STRING-K8S)"

- ${{  else  }}:
  - template: pipelines/release-helm-chart.yml@templates
    parameters:
      serviceConnection: $(serviceConnection)
      serviceName: $(serviceName)
      image: $(image_manual_override)
      environment: dev
      system: dev
      minReplicas: 1
      maxReplicas: 2
      cpu: 1
      memory: 2Gi
      ipwhitelist: 0.0.0.0/0
      helmRepoPassword: $(HELM-REPO-PASSWORD)
      envVars: |
        --set env.API_KEY=$(DEV-COMMON-API-KEY) \
        --set env.API_URL="***REMOVED***" \
        --set env.APPLICATIONINSIGHTS_CONNECTION_STRING="$(DEV-COMMON-APP-INSIGHTS-CONNECTION-STRING)" \
        --set env.APPLICATION_ENVIRONMENT=dev \
        --set env.CONNECTION_STRING="$(DEV-BLOCKCHAIN-DB-CONNECTION-STRING-K8S)" \
        --set env.DEV_MODE=TRUE \
        --set env.NFT_SYNC=true \
        --set env.PLAYFAB_DEV_SECRET_KEY=$(DEV-COMMON-PLAYFAB-SECRET-KEY) \
        --set env.PLAYFAB_SECRET_KEY=$(DEV-COMMON-PLAYFAB-SECRET-KEY) \
        --set env.PLAYFAB_TITLE=***REMOVED*** \
        --set env.SqlConnectionString="$(DEV-BLOCKCHAIN-DB-CONNECTION-STRING-K8S)"
# The above `else` statement is redundant. Azure devops requires at least one stage with no dependencies.

# autoscaling percentage values are bsed on request values, not limits.
# by default, we request 100 millicores. 190% of 100 millicores is 190 millicores.
